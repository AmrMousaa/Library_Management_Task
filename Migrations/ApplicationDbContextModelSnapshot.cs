// <auto-generated />
using System;
using Library_Management_System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library_Management_System.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookBorrower", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("BorrowersId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "BorrowersId");

                    b.HasIndex("BorrowersId");

                    b.ToTable("BorrowedBooks", (string)null);
                });

            modelBuilder.Entity("Library_Management_System.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2001, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amr Mousa"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2001, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anas Emad"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2000, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mohab Ayman"
                        });
                });

            modelBuilder.Entity("Library_Management_System.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Genre = "Art",
                            PublishedDate = new DateTime(2022, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Don Quixote"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Genre = "Science Fiction",
                            PublishedDate = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Treasure Island"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Genre = "Historical",
                            PublishedDate = new DateTime(2022, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Jane Eyre"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Genre = "Art",
                            PublishedDate = new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Moby Dick"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            Genre = "Science Fiction",
                            PublishedDate = new DateTime(2022, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Gulliver's Travels"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            Genre = "Historical",
                            PublishedDate = new DateTime(2023, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "A Christmas Carol"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            Genre = "Art",
                            PublishedDate = new DateTime(2020, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "White Fang"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            Genre = "Historical",
                            PublishedDate = new DateTime(2023, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "A Christmas Carol"
                        });
                });

            modelBuilder.Entity("Library_Management_System.Models.Borrower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Borrowers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mohamed Saleh"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ahmed Salem"
                        });
                });

            modelBuilder.Entity("BookBorrower", b =>
                {
                    b.HasOne("Library_Management_System.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_Management_System.Models.Borrower", null)
                        .WithMany()
                        .HasForeignKey("BorrowersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Library_Management_System.Models.Book", b =>
                {
                    b.HasOne("Library_Management_System.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Library_Management_System.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
